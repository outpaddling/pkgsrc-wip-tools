#!/bin/sh -e

usage()
{
    cat << EOM
Usage: wip-reinstall-pkg [-[n]u] [-[n]r] -b pkgname [pkgname ...]

-u  = run wip-update first
-r  = remove distfile before rebuilding
-nu = do not run wip-update first
-nr = do not remove distfile before rebuilding
-b  = Build in batch mode (no options dialogs)
EOM
    exit $EX_USAGE
}

EX_OK=0
EX__BASE=64
EX_USAGE=64
EX_DATAERR=65
EX_NOINPUT=66
EX_NOUSER=67
EX_NOHOST=68
EX_UNAVAILABLE=69
EX_SOFTWARE=70
EX_OSERR=71
EX_OSFILE=72
EX_CANTCREAT=73
EX_IOERR=74
EX_TEMPFAIL=75
EX_PROTOCOL=76
EX_NOPERM=77
EX_CONFIG=78

if [ $# -lt 1 ]; then
    usage
fi

while echo $1 | grep -q -e '^-'; do
    case $1 in
    -r)
	remove='y'
	;;
    -u)
	update='y'
	;;
    -nr)
	remove='n'
	;;
    -nu)
	update='n'
	;;
    -b)
	make_flags='-DBATCH'
	;;
    *)
	usage
	;;
    esac
    shift
done

PKGSRCDIR=$(auto-pkgsrc-dir)

if [ 0$update = 0 ]; then
    printf "Run wip-update first? [y]/n "
    read update
fi

if [ 0$remove = 0 ]; then
    printf "Remove distfile? y/[n] "
    read remove
fi

if [ 0$update != 0n ]; then
    cd
    wip-update
fi

make=$(pkgsrc-make)
for pkgname in $@; do
    cd $PKGSRCDIR/wip/$pkgname
    if [ 0$remove = 0y ]; then
	$make distclean
    else
	$make clean
    fi
    
    $make
    pkg_dir=`pwd | awk -F / '{ printf("%s/%s", $(NF-1), $NF); }'`
    pkgbase=`auto-print-make-variable $pkg_dir PKGBASE`
    pkg_delete -f $pkgbase
    $make $make_flags reinstall clean
done
